# list of all customers
SELECT *
FROM customer;

# Total no of rentals
SELECT COUNT(rental_id) AS 'No of Rentals'
FROM rental;

# average lenght of all films
SELECT AVG(length) 'Average lenght of all movies '
FROM film;

# all employees
SELECT concat(first_name, ' ',last_name ) AS 'Employee'
FROM staff;

# list of all films
SELECT title
FROM film;

# total number of payment
SELECT COUNT(payment_id) 'Total no of payment'
FROM payment;

# film categories
SELECT name AS 'Film category'
FROM category;

# average rental rate
SELECT AVG(rental_rate) 'Average rental rate of all film'
FROM film;

# names and emails of customers
SELECT concat(first_name, ' ',last_name ) AS 'Full Name', email
FROM customer;

# customers with rental records
SELECT concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', COUNT(cus.first_name) AS 'No of records'
FROM customer AS cus
LEFT JOIN rental AS ren
ON cus.customer_id = ren.customer_id
GROUP BY  Full_Name;

# top 5 most rented films
SELECT fil.title AS 'Title',COUNT(fil.title) AS 'No_of_Times_Rented'
FROM film AS fil
JOIN inventory AS inv
ON fil.film_id = inv.film_id
JOIN rental AS ren
ON inv.inventory_id = ren.inventory_id
GROUP BY Title
ORDER BY No_of_Times_Rented DESC
LIMIT 5;


# customers residing in same city as employee 1
SELECT concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', cus.email
FROM city AS cit
JOIN address AS adr
ON cit.city_id = adr.city_id
JOIN customer AS cus 
ON adr.address_id = cus.address_id
JOIN staff AS sta
ON cus.store_id = sta.store_id
WHERE sta.staff_id = 1;

# revenue generated by top three category
SELECT cat.name AS 'Category', pay.amount AS 'Revenue', COUNt(cat.name) AS 'No of Sales'
FROM category AS cat
JOIN film_category AS filca
ON cat.category_id = filca.category_id
JOIN inventory AS inv
ON filca.film_id = inv.film_id
JOIN staff AS sta
ON inv.store_id = sta.store_id
JOIN payment AS pay
ON sta.staff_id = pay.staff_id
GROUP BY cat.name
ORDER BY pay.amount DESC
LIMIT 3;

# No of films available in each language
SELECT fil.title AS 'Film', lan.name AS 'Language', COUNT(fil.title)  AS 'No_of_Films'
FROM film AS fil
JOIN language AS lan
ON fil.language_id = lan.language_id
GROUP BY Film
ORDER BY No_of_Films  ;

# customers with payment records
SELECT  concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', COUNT(pay.payment_id) AS 'No_of_Purchase'
FROM customer AS cus
LEFT JOIN payment AS pay
ON cus.customer_id = pay.customer_id
GROUP BY Full_Name
ORDER BY No_of_Purchase DESC;

# Top 5 customers with highest payments
SELECT  concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', COUNT(pay.payment_id) AS 'No_of_Purchase', pay.amount AS 'Total_Amount'
FROM customer AS cus
LEFT JOIN payment AS pay
ON cus.customer_id = pay.customer_id
GROUP BY Full_Name
ORDER BY Total_Amount DESC
LIMIT 5;

# actors with more than 10 films
SELECT  concat(act.first_name, ' ',act.last_name ) AS 'Actor_Full_Name', COUNT(fil.film_id) AS 'No_of_Film_Acted'
FROM actor AS act
JOIN film_actor AS filac
ON act.actor_id = filac.actor_id
JOIN film AS fil
ON filac.film_id = fil.film_id
GROUP BY Actor_Full_Name
HAVING No_of_Film_Acted > 10
ORDER BY No_of_Film_Acted DESC ;

# total revenue generated by each employee
SELECT sta.staff_id AS 'Staff_ID', concat(sta.first_name, ' ',sta.last_name ) AS 'Staff_Full_Name', SUM(pay.amount) AS 'Revenue_Generated'
FROM payment AS pay
JOIN staff AS sta
ON pay.staff_id = sta.staff_id
GROUP BY Staff_ID,Staff_Full_Name
ORDER BY Revenue_Generated;

# films available in each rating category
SELECT rating, COUNT(*) 'No_of_Films'
FROM film
GROUP BY rating;

# customer with the highest rental revenue
SELECT concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', COUNT(pay.payment_id) AS 'No_of_Purchase', SUM(pay.amount) AS 'Revenue',
      ren.rental_id AS 'Rental_ID' , ren.rental_date AS 'Rental_Date', ren.return_date AS 'Return_Date'
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
GROUP BY Full_Name
ORDER BY Revenue DESC
LIMIT 1;

# employee with most rental
SELECT concat(sta.first_name, ' ',sta.last_name ) AS 'Full_Name', COUNT(ren.rental_id) AS 'No_of_rental'
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
JOIN staff AS sta
ON ren.staff_id = sta.staff_id
GROUP BY Full_Name
ORDER BY No_of_rental DESC
LIMIT 1;

# Average rental duration for each film
SELECT title, AVG(rental_duration) 'Average_rental_duration'
FROM film
GROUP BY title;

# actors with zero appearance in films
SELECT  concat(act.first_name, ' ',act.last_name ) AS 'Actor_Full_Name', COUNT(fil.film_id) AS 'No_of_Film_Acted'
FROM actor AS act
JOIN film_actor AS filac
ON act.actor_id = filac.actor_id
JOIN film AS fil
ON filac.film_id = fil.film_id
GROUP BY Actor_Full_Name
HAVING No_of_Film_Acted = 10;

# customer with most individual film rental
SELECT concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', COUNT(ren.rental_id) AS 'No_of_rental'
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
JOIN staff AS sta
ON ren.staff_id = sta.staff_id
GROUP BY Full_Name
ORDER BY No_of_rental DESC
LIMIT 1;

# customer with highest total payment
SELECT cus.customer_id AS 'Customer_ID', concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', pay.payment_id AS 'Payment_ID',
      COUNT(pay.payment_id) AS 'No_of_Purchase', SUM(pay.amount) AS 'Total_Payment'     
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
GROUP BY Full_Name
ORDER BY Total_Payment DESC
LIMIT 1;

# employee with over 200 customer processed
SELECT concat(sta.first_name, ' ',sta.last_name ) AS 'Full_Name', COUNT(pay.payment_id) AS 'No_of_Payments',
      SUM(pay.amount) AS 'Total_payments_processed'
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
JOIN staff AS sta
ON ren.staff_id = sta.staff_id
GROUP BY Full_Name
HAVING COUNT(cus.customer_id) > 200
ORDER BY No_of_Payments DESC;

# average rental duration for each rating category
SELECT cat.name 'Category',AVG(rental_duration) 'Average_rental_duration' 
FROM film AS fil
JOIN film_category AS filca 
ON fil.film_id = filca.film_id
JOIN category AS cat
ON filca.category_id = cat.category_id
GROUP BY Category
HAVING Average_rental_duration;

# films with zero rentage
SELECT fil.title AS 'Title'
FROM film AS fil
JOIN inventory AS inv
ON fil.film_id = inv.film_id
JOIN rental AS ren
ON inv.inventory_id = ren.inventory_id
GROUP BY Title
HAVING COUNT(ren.rental_id) = 0;

# customer with highest rental duration
SELECT cus.customer_id AS 'Customer_ID', concat(cus.first_name, ' ',cus.last_name ) AS 'Full_Name', pay.payment_id AS 'Payment_ID',
      SUM(fil.rental_duration)  AS 'Rental_Duration'
FROM customer AS cus
JOIN rental AS ren
ON cus.customer_id = ren.customer_id
JOIN inventory AS inv
ON ren.inventory_id = inv.inventory_id
JOIN film AS fil
ON inv.film_id = fil.film_id
JOIN payment AS pay
ON ren.rental_id = pay.rental_id
GROUP BY Full_Name
ORDER BY Rental_Duration DESC
LIMIT 1;
